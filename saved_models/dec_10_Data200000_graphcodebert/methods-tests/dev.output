@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }
@Test    public void testToString() {        Ehcache cache = new Cache("testGetMemoryStore", 10, false, false, 100, 200);        assertTrue(cache.toString().indexOf("testGetMemoryStore") > -1);    }

03/27/2022 06:50:49 - INFO - __main__ -   Namespace(adam_epsilon=1e-08, beam_size=10, config_name='graphcodebert-base', dev_filename='dataset/small/eval_evo_80.methods,dataset/evosuit/eval_evo_80.tests', do_eval=False, do_lower_case=False, do_test=True, do_train=False, eval_batch_size=32, eval_steps=-1, gradient_accumulation_steps=1, learning_rate=5e-05, load_model_path='saved_models/dec_6_combined_contex_graphcodebert_512_512/methods-tests//checkpoint-best-bleu/pytorch_model.bin', local_rank=-1, max_grad_norm=1.0, max_source_length=512, max_steps=-1, max_target_length=512, model_name_or_path='saved_models/dec_6_combined_contex_graphcodebert_512_512/methods-tests//checkpoint-best-bleu/pytorch_model.bin', model_type='roberta', no_cuda=False, num_train_epochs=3, output_dir='saved_models/dec_6_combined_contex_graphcodebert_512_512/methods-tests/', seed=42, source_lang='methods', test_filename='dataset/small/eval_evo_80.methods,dataset/evosuit/eval_evo_80.tests', tokenizer_name='graphcodebert-base', train_batch_size=8, train_filename=None, train_steps=-1, warmup_steps=0, weight_decay=0.0)
Traceback (most recent call last):
  File "run.py", line 632, in <module>
    main()
  File "run.py", line 397, in main
    tokenizer = tokenizer_class.from_pretrained(args.tokenizer_name )
  File "/home/armin/sepehr/ENV/lib/python3.8/site-packages/transformers/tokenization_utils_base.py", line 1788, in from_pretrained
    return cls._from_pretrained(
  File "/home/armin/sepehr/ENV/lib/python3.8/site-packages/transformers/tokenization_utils_base.py", line 1860, in _from_pretrained
    tokenizer = cls(*init_inputs, **init_kwargs)
  File "/home/armin/sepehr/ENV/lib/python3.8/site-packages/transformers/models/roberta/tokenization_roberta.py", line 159, in __init__
    super().__init__(
  File "/home/armin/sepehr/ENV/lib/python3.8/site-packages/transformers/models/gpt2/tokenization_gpt2.py", line 177, in __init__
    self.encoder = json.load(vocab_handle)
  File "/usr/lib/python3.8/json/__init__.py", line 293, in load
    return loads(fp.read(),
  File "/usr/lib/python3.8/json/__init__.py", line 357, in loads
    return _default_decoder.decode(s)
  File "/usr/lib/python3.8/json/decoder.py", line 337, in decode
    obj, end = self.raw_decode(s, idx=_w(s, 0).end())
  File "/usr/lib/python3.8/json/decoder.py", line 355, in raw_decode
    raise JSONDecodeError("Expecting value", s, err.value) from None
json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)
